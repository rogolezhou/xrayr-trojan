version: '3'

services:
  xrayr:
    build:
      context: .
      dockerfile: Dockerfile
    image: rogolezhou/xrayr:v0.9.2
    network_mode: host
    environment:
      - TZ=Asia/Shanghai
    env_file:
      - .env
    volumes:
      - ./conf.d:/etc/xrayr/conf.d
      - ./node.d:/etc/xrayr/node.d
      - ./xrayr:/tmp/xrayr
    restart: always

  acme:
    build:
      context: .  # 指定 Dockerfile 的上下文
      dockerfile: Dockerfile.cron
    volumes:
      - /path/to/certificates:/etc/lego/certificates  # 挂载证书目录
    env_file:
      - cron.env
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}  # 从 cron.env 文件中读取
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}  # 从 cron.env 文件中读取
      - DOMAIN=${DOMAIN}  # 从 cron.env 文件中读取
    entrypoint: ["/docker-cron.sh"]  # 指定入口点

  nginx:
    image: nginx:latest
    volumes:
      - /path/to/certificates:/etc/nginx/ssl  # 挂载证书目录
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # 挂载 Nginx 配置
    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS
    depends_on:
      - acme  # 确保 acme 服务先启动